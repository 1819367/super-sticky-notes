{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\porte\\\\Desktop\\\\super-sticky-notes\\\\src\\\\NotesList.js\";\nimport React from \"react\";\nimport Note from \"./Note\";\nconst NotesList = props => {\n  /*filter method needs a callback function */\n  const keepSearchMatches = note => note.doesMatchSearch === true;\n  const searchMatches = props.note;\n\n  /*call back function needed to map.  Need to add the key and note property inside the Note componenet*/\n  const renderNote = note => /*#__PURE__*/React.createElement(Note, {\n    note: note,\n    key: note.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 34\n    }\n  });\n  /*new variable to map over props.notes array and render it via the call back function*/\n  const noteElements = props.notes.map(renderNote);\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"notes-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, console.log(props.notes), noteElements);\n};\n_c = NotesList;\nexport default NotesList;\nvar _c;\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"names":["React","Note","NotesList","props","keepSearchMatches","note","doesMatchSearch","searchMatches","renderNote","createElement","key","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","noteElements","notes","map","className","console","log","_c","$RefreshReg$"],"sources":["C:/Users/porte/Desktop/super-sticky-notes/src/NotesList.js"],"sourcesContent":["import React from \"react\";\r\nimport Note from \"./Note\";\r\n\r\nconst NotesList = (props) => {\r\n    /*filter method needs a callback function */\r\n    const keepSearchMatches = (note) => note.doesMatchSearch === true;\r\n    const searchMatches = props.note\r\n\r\n    /*call back function needed to map.  Need to add the key and note property inside the Note componenet*/\r\n    const renderNote = (note) => <Note note={note} key={note.id}/>\r\n    /*new variable to map over props.notes array and render it via the call back function*/\r\n    const noteElements = props.notes.map(renderNote)\r\n    \r\n    return (\r\n    <ul className=\"notes-list\">\r\n        {console.log(props.notes)}\r\n        {noteElements}\r\n        {/*<Note /> these are no longer needed bc {noteElement}\r\n        <Note />\r\n        <Note />*/}\r\n    </ul>\r\n);\r\n}\r\n\r\nexport default NotesList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAEzB,MAAMC,SAAS,GAAIC,KAAK,IAAK;EACzB;EACA,MAAMC,iBAAiB,GAAIC,IAAI,IAAKA,IAAI,CAACC,eAAe,KAAK,IAAI;EACjE,MAAMC,aAAa,GAAGJ,KAAK,CAACE,IAAI;;EAEhC;EACA,MAAMG,UAAU,GAAIH,IAAI,iBAAKL,KAAA,CAAAS,aAAA,CAACR,IAAI;IAACI,IAAI,EAAEA,IAAK;IAACK,GAAG,EAAEL,IAAI,CAACM,EAAG;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAAC;EAC9D;EACA,MAAMC,YAAY,GAAGf,KAAK,CAACgB,KAAK,CAACC,GAAG,CAACZ,UAAU,CAAC;EAEhD,oBACAR,KAAA,CAAAS,aAAA;IAAIY,SAAS,EAAC,YAAY;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACrBK,OAAO,CAACC,GAAG,CAACpB,KAAK,CAACgB,KAAK,CAAC,EACxBD,YAID,CAAC;AAET,CAAC;AAAAM,EAAA,GAnBKtB,SAAS;AAqBf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}